// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file kessel/inventory/v1beta2/report_resource_request.proto (package kessel.inventory.v1beta2, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { ResourceRepresentations } from "./resource_representations_pb";
import { file_kessel_inventory_v1beta2_resource_representations } from "./resource_representations_pb";
import type { WriteVisibility } from "./write_visibility_pb";
import { file_kessel_inventory_v1beta2_write_visibility } from "./write_visibility_pb";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file kessel/inventory/v1beta2/report_resource_request.proto.
 */
export const file_kessel_inventory_v1beta2_report_resource_request: GenFile =
  /*@__PURE__*/
  fileDesc(
    "CjZrZXNzZWwvaW52ZW50b3J5L3YxYmV0YTIvcmVwb3J0X3Jlc291cmNlX3JlcXVlc3QucHJvdG8SGGtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMiLEAgoVUmVwb3J0UmVzb3VyY2VSZXF1ZXN0EhkKDGludmVudG9yeV9pZBgBIAEoCUgAiAEBEhUKBHR5cGUYAiABKAlCB7pIBHICEAESHgoNcmVwb3J0ZXJfdHlwZRgDIAEoCUIHukgEcgIQARIlChRyZXBvcnRlcl9pbnN0YW5jZV9pZBgEIAEoCUIHukgEcgIQARJSCg9yZXByZXNlbnRhdGlvbnMYBSABKAsyMS5rZXNzZWwuaW52ZW50b3J5LnYxYmV0YTIuUmVzb3VyY2VSZXByZXNlbnRhdGlvbnNCBrpIA8gBARJNChB3cml0ZV92aXNpYmlsaXR5GAYgASgOMikua2Vzc2VsLmludmVudG9yeS52MWJldGEyLldyaXRlVmlzaWJpbGl0eUIIukgFggECEAFCDwoNX2ludmVudG9yeV9pZEJyCihvcmcucHJvamVjdF9rZXNzZWwuYXBpLmludmVudG9yeS52MWJldGEyUAFaRGdpdGh1Yi5jb20vcHJvamVjdC1rZXNzZWwvaW52ZW50b3J5LWFwaS9hcGkva2Vzc2VsL2ludmVudG9yeS92MWJldGEyYgZwcm90bzM",
    [
      file_kessel_inventory_v1beta2_resource_representations,
      file_kessel_inventory_v1beta2_write_visibility,
      file_buf_validate_validate,
    ],
  );

/**
 * Request to register or update a *Reporter*'s *Representation* of a *Resource* in Kessel Inventory.
 *
 * @generated from message kessel.inventory.v1beta2.ReportResourceRequest
 */
export type ReportResourceRequest =
  Message<"kessel.inventory.v1beta2.ReportResourceRequest"> & {
    /**
     * The Kessel Inventory-assigned ID of the *Resource*.
     *
     * Usually not required during reporting; populated internally during correlation.
     *
     * @generated from field: optional string inventory_id = 1;
     */
    inventoryId?: string;

    /**
     * The canonical type of the *Resource* (e.g., "k8s_cluster", "host", "integration").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* of a given Type reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     *
     * @generated from field: string type = 2;
     */
    type: string;

    /**
     * The type of the *Reporter* (e.g., "hbi", "acm", "acs", "notifications").
     *
     * Must be a previously agreed-upon value between the *Reporter* and Kessel Inventory.
     * Must be consistent across all *Reporter Representations* reported by a given *Reporter*.
     * Used to:
     * - Select the appropriate schema to validate the *Reporter Representation*
     * - Identify a *Reporter's Representation* uniquely in Kessel Inventory
     *
     * @generated from field: string reporter_type = 3;
     */
    reporterType: string;

    /**
     * Identifier for the specific instance of the *Reporter*.
     * This may not be applicable to all Reporters
     *
     * Used to distinguish between multiple instances of the same `reporter_type`.
     * Does not require prior coordination with Kessel Inventory.
     *
     * @generated from field: string reporter_instance_id = 4;
     */
    reporterInstanceId: string;

    /**
     * @generated from field: kessel.inventory.v1beta2.ResourceRepresentations representations = 5;
     */
    representations?: ResourceRepresentations;

    /**
     * Controls the visibility guarantees of the write operation in Kessel Inventory.
     *
     * - `MINIMIZE_LATENCY` (default): Optimizes for throughput; may delay visibility in `Check` results.
     * - `IMMEDIATE`: Ensures read-your-writes consistency; higher latency due to synchronization.
     *
     * Use `IMMEDIATE` only if your use case requires strong consistency guarantees
     * (e.g., writing and immediately checking access to the resource).
     *
     * @generated from field: kessel.inventory.v1beta2.WriteVisibility write_visibility = 6;
     */
    writeVisibility: WriteVisibility;
  };

/**
 * Describes the message kessel.inventory.v1beta2.ReportResourceRequest.
 * Use `create(ReportResourceRequestSchema)` to create a new message.
 */
export const ReportResourceRequestSchema: GenMessage<ReportResourceRequest> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta2_report_resource_request, 0);
