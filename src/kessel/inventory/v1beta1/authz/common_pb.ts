// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file kessel/inventory/v1beta1/authz/common.proto (package kessel.inventory.v1beta1.authz, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file kessel/inventory/v1beta1/authz/common.proto.
 */
export const file_kessel_inventory_v1beta1_authz_common: GenFile =
  /*@__PURE__*/
  fileDesc(
    "CitrZXNzZWwvaW52ZW50b3J5L3YxYmV0YTEvYXV0aHovY29tbW9uLnByb3RvEh5rZXNzZWwuaW52ZW50b3J5LnYxYmV0YTEuYXV0aHoivwEKDFJlbGF0aW9uc2hpcBJJCghyZXNvdXJjZRgBIAEoCzIvLmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5PYmplY3RSZWZlcmVuY2VCBrpIA8gBARIZCghyZWxhdGlvbhgCIAEoCUIHukgEcgIQARJJCgdzdWJqZWN0GAMgASgLMjAua2Vzc2VsLmludmVudG9yeS52MWJldGExLmF1dGh6LlN1YmplY3RSZWZlcmVuY2VCBrpIA8gBASKAAQoQU3ViamVjdFJlZmVyZW5jZRIVCghyZWxhdGlvbhgBIAEoCUgAiAEBEkgKB3N1YmplY3QYAiABKAsyLy5rZXNzZWwuaW52ZW50b3J5LnYxYmV0YTEuYXV0aHouT2JqZWN0UmVmZXJlbmNlQga6SAPIAQFCCwoJX3JlbGF0aW9uImMKEVJlcXVlc3RQYWdpbmF0aW9uEhYKBWxpbWl0GAEgASgNQge6SAQqAiAAEh8KEmNvbnRpbnVhdGlvbl90b2tlbhgCIAEoCUgAiAEBQhUKE19jb250aW51YXRpb25fdG9rZW4iMAoSUmVzcG9uc2VQYWdpbmF0aW9uEhoKEmNvbnRpbnVhdGlvbl90b2tlbhgBIAEoCSJoCg9PYmplY3RSZWZlcmVuY2USQAoEdHlwZRgBIAEoCzIqLmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5PYmplY3RUeXBlQga6SAPIAQESEwoCaWQYAiABKAlCB7pIBHICEAEiPwoKT2JqZWN0VHlwZRIaCgluYW1lc3BhY2UYASABKAlCB7pIBHICEAESFQoEbmFtZRgCIAEoCUIHukgEcgIQASKXAQoLQ29uc2lzdGVuY3kSIwoQbWluaW1pemVfbGF0ZW5jeRgBIAEoCEIHukgEagIIAUgAEk0KEWF0X2xlYXN0X2FzX2ZyZXNoGAIgASgLMjAua2Vzc2VsLmludmVudG9yeS52MWJldGExLmF1dGh6LkNvbnNpc3RlbmN5VG9rZW5IAEIUCgtyZXF1aXJlbWVudBIFukgCCAEiKgoQQ29uc2lzdGVuY3lUb2tlbhIWCgV0b2tlbhgBIAEoCUIHukgEcgIQAUJ+Ci5vcmcucHJvamVjdF9rZXNzZWwuYXBpLmludmVudG9yeS52MWJldGExLmF1dGh6UAFaSmdpdGh1Yi5jb20vcHJvamVjdC1rZXNzZWwvaW52ZW50b3J5LWFwaS9hcGkva2Vzc2VsL2ludmVudG9yeS92MWJldGExL2F1dGh6YgZwcm90bzM",
    [file_buf_validate_validate],
  );

/**
 * A _Relationship_ is the realization of a _Relation_ (a string)
 * between a _Resource_ and a _Subject_ or a _Subject Set_ (known as a Userset in Zanzibar).
 *
 * All Relationships are object-object relations.
 * "Resource" and "Subject" are relative terms which define the direction of a Relation.
 * That is, Relations are unidirectional.
 * If you reverse the Subject and Resource, it is a different Relation and a different Relationship.
 * Conventionally, we generally refer to the Resource first, then Subject,
 * following the direction of typical graph traversal (Resource to Subject).
 *
 * @generated from message kessel.inventory.v1beta1.authz.Relationship
 */
export type Relationship =
  Message<"kessel.inventory.v1beta1.authz.Relationship"> & {
    /**
     * @generated from field: kessel.inventory.v1beta1.authz.ObjectReference resource = 1;
     */
    resource?: ObjectReference;

    /**
     * @generated from field: string relation = 2;
     */
    relation: string;

    /**
     * @generated from field: kessel.inventory.v1beta1.authz.SubjectReference subject = 3;
     */
    subject?: SubjectReference;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.Relationship.
 * Use `create(RelationshipSchema)` to create a new message.
 */
export const RelationshipSchema: GenMessage<Relationship> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 0);

/**
 * A reference to a Subject or, if a `relation` is provided, a Subject Set.
 *
 * @generated from message kessel.inventory.v1beta1.authz.SubjectReference
 */
export type SubjectReference =
  Message<"kessel.inventory.v1beta1.authz.SubjectReference"> & {
    /**
     * An optional relation which points to a set of Subjects instead of the single Subject.
     * e.g. "members" or "owners" of a group identified in `subject`.
     *
     * @generated from field: optional string relation = 1;
     */
    relation?: string;

    /**
     * @generated from field: kessel.inventory.v1beta1.authz.ObjectReference subject = 2;
     */
    subject?: ObjectReference;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.SubjectReference.
 * Use `create(SubjectReferenceSchema)` to create a new message.
 */
export const SubjectReferenceSchema: GenMessage<SubjectReference> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 1);

/**
 * @generated from message kessel.inventory.v1beta1.authz.RequestPagination
 */
export type RequestPagination =
  Message<"kessel.inventory.v1beta1.authz.RequestPagination"> & {
    /**
     * @generated from field: uint32 limit = 1;
     */
    limit: number;

    /**
     * @generated from field: optional string continuation_token = 2;
     */
    continuationToken?: string;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.RequestPagination.
 * Use `create(RequestPaginationSchema)` to create a new message.
 */
export const RequestPaginationSchema: GenMessage<RequestPagination> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 2);

/**
 * @generated from message kessel.inventory.v1beta1.authz.ResponsePagination
 */
export type ResponsePagination =
  Message<"kessel.inventory.v1beta1.authz.ResponsePagination"> & {
    /**
     * @generated from field: string continuation_token = 1;
     */
    continuationToken: string;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.ResponsePagination.
 * Use `create(ResponsePaginationSchema)` to create a new message.
 */
export const ResponsePaginationSchema: GenMessage<ResponsePagination> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 3);

/**
 * @generated from message kessel.inventory.v1beta1.authz.ObjectReference
 */
export type ObjectReference =
  Message<"kessel.inventory.v1beta1.authz.ObjectReference"> & {
    /**
     * @generated from field: kessel.inventory.v1beta1.authz.ObjectType type = 1;
     */
    type?: ObjectType;

    /**
     * @generated from field: string id = 2;
     */
    id: string;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.ObjectReference.
 * Use `create(ObjectReferenceSchema)` to create a new message.
 */
export const ObjectReferenceSchema: GenMessage<ObjectReference> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 4);

/**
 * @generated from message kessel.inventory.v1beta1.authz.ObjectType
 */
export type ObjectType =
  Message<"kessel.inventory.v1beta1.authz.ObjectType"> & {
    /**
     * @generated from field: string namespace = 1;
     */
    namespace: string;

    /**
     * @generated from field: string name = 2;
     */
    name: string;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.ObjectType.
 * Use `create(ObjectTypeSchema)` to create a new message.
 */
export const ObjectTypeSchema: GenMessage<ObjectType> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 5);

/**
 * Defines how a request is handled by the service.
 *
 * @generated from message kessel.inventory.v1beta1.authz.Consistency
 */
export type Consistency =
  Message<"kessel.inventory.v1beta1.authz.Consistency"> & {
    /**
     * @generated from oneof kessel.inventory.v1beta1.authz.Consistency.requirement
     */
    requirement:
      | {
          /**
           * The service selects the fastest snapshot available.
           * *Must* be set true if used.
           *
           * @generated from field: bool minimize_latency = 1;
           */
          value: boolean;
          case: "minimizeLatency";
        }
      | {
          /**
           * All data used in the API call must be *at least as fresh*
           * as found in the ConsistencyToken. More recent data might be used
           * if available or faster.
           *
           * @generated from field: kessel.inventory.v1beta1.authz.ConsistencyToken at_least_as_fresh = 2;
           */
          value: ConsistencyToken;
          case: "atLeastAsFresh";
        }
      | { case: undefined; value?: undefined };
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.Consistency.
 * Use `create(ConsistencySchema)` to create a new message.
 */
export const ConsistencySchema: GenMessage<Consistency> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 6);

/**
 * The ConsistencyToken is used to provide consistency between write and read requests.
 *
 * @generated from message kessel.inventory.v1beta1.authz.ConsistencyToken
 */
export type ConsistencyToken =
  Message<"kessel.inventory.v1beta1.authz.ConsistencyToken"> & {
    /**
     * @generated from field: string token = 1;
     */
    token: string;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.ConsistencyToken.
 * Use `create(ConsistencyTokenSchema)` to create a new message.
 */
export const ConsistencyTokenSchema: GenMessage<ConsistencyToken> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_common, 7);
