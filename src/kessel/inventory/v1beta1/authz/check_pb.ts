// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file kessel/inventory/v1beta1/authz/check.proto (package kessel.inventory.v1beta1.authz, syntax proto3)
/* eslint-disable */

import type {
  GenEnum,
  GenFile,
  GenMessage,
  GenService,
} from "@bufbuild/protobuf/codegenv2";
import {
  enumDesc,
  fileDesc,
  messageDesc,
  serviceDesc,
} from "@bufbuild/protobuf/codegenv2";
import { file_google_api_annotations } from "../../../../google/api/annotations_pb";
import type { ObjectReference, SubjectReference } from "./common_pb";
import { file_kessel_inventory_v1beta1_authz_common } from "./common_pb";
import { file_buf_validate_validate } from "../../../../buf/validate/validate_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file kessel/inventory/v1beta1/authz/check.proto.
 */
export const file_kessel_inventory_v1beta1_authz_check: GenFile =
  /*@__PURE__*/
  fileDesc(
    "CiprZXNzZWwvaW52ZW50b3J5L3YxYmV0YTEvYXV0aHovY2hlY2sucHJvdG8SHmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoeiK9AQoMQ2hlY2tSZXF1ZXN0EkcKBnBhcmVudBgBIAEoCzIvLmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5PYmplY3RSZWZlcmVuY2VCBrpIA8gBARIZCghyZWxhdGlvbhgCIAEoCUIHukgEcgIQARJJCgdzdWJqZWN0GAMgASgLMjAua2Vzc2VsLmludmVudG9yeS52MWJldGExLmF1dGh6LlN1YmplY3RSZWZlcmVuY2VCBrpIA8gBASKgAQoNQ2hlY2tSZXNwb25zZRJGCgdhbGxvd2VkGAEgASgOMjUua2Vzc2VsLmludmVudG9yeS52MWJldGExLmF1dGh6LkNoZWNrUmVzcG9uc2UuQWxsb3dlZCJHCgdBbGxvd2VkEhcKE0FMTE9XRURfVU5TUEVDSUZJRUQQABIQCgxBTExPV0VEX1RSVUUQARIRCg1BTExPV0VEX0ZBTFNFEAIixgEKFUNoZWNrRm9yVXBkYXRlUmVxdWVzdBJHCgZwYXJlbnQYASABKAsyLy5rZXNzZWwuaW52ZW50b3J5LnYxYmV0YTEuYXV0aHouT2JqZWN0UmVmZXJlbmNlQga6SAPIAQESGQoIcmVsYXRpb24YAiABKAlCB7pIBHICEAESSQoHc3ViamVjdBgDIAEoCzIwLmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5TdWJqZWN0UmVmZXJlbmNlQga6SAPIAQEisgEKFkNoZWNrRm9yVXBkYXRlUmVzcG9uc2USTwoHYWxsb3dlZBgBIAEoDjI+Lmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5DaGVja0ZvclVwZGF0ZVJlc3BvbnNlLkFsbG93ZWQiRwoHQWxsb3dlZBIXChNBTExPV0VEX1VOU1BFQ0lGSUVEEAASEAoMQUxMT1dFRF9UUlVFEAESEQoNQUxMT1dFRF9GQUxTRRACMuQCChJLZXNzZWxDaGVja1NlcnZpY2USkwEKBUNoZWNrEiwua2Vzc2VsLmludmVudG9yeS52MWJldGExLmF1dGh6LkNoZWNrUmVxdWVzdBotLmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5DaGVja1Jlc3BvbnNlIi2C0+STAic6ASoiIi9hcGkvaW52ZW50b3J5L3YxYmV0YTEvYXV0aHovY2hlY2sStwEKDkNoZWNrRm9yVXBkYXRlEjUua2Vzc2VsLmludmVudG9yeS52MWJldGExLmF1dGh6LkNoZWNrRm9yVXBkYXRlUmVxdWVzdBo2Lmtlc3NlbC5pbnZlbnRvcnkudjFiZXRhMS5hdXRoei5DaGVja0ZvclVwZGF0ZVJlc3BvbnNlIjaC0+STAjA6ASoiKy9hcGkvaW52ZW50b3J5L3YxYmV0YTEvYXV0aHovY2hlY2tmb3J1cGRhdGVCfgoub3JnLnByb2plY3Rfa2Vzc2VsLmFwaS5pbnZlbnRvcnkudjFiZXRhMS5hdXRoelABWkpnaXRodWIuY29tL3Byb2plY3Qta2Vzc2VsL2ludmVudG9yeS1hcGkvYXBpL2tlc3NlbC9pbnZlbnRvcnkvdjFiZXRhMS9hdXRoemIGcHJvdG8z",
    [
      file_google_api_annotations,
      file_kessel_inventory_v1beta1_authz_common,
      file_buf_validate_validate,
    ],
  );

/**
 * @generated from message kessel.inventory.v1beta1.authz.CheckRequest
 */
export type CheckRequest =
  Message<"kessel.inventory.v1beta1.authz.CheckRequest"> & {
    /**
     * Required parameters (from an authz perspective)
     * - resource type and id
     * - permission (cannot be derived from the type as a type may have multiple 'read' permissions. Ex: https://github.com/RedHatInsights/rbac-config/blob/master/configs/prod/schemas/src/notifications.ksl#L31)
     * - user (possibly derived from an identity token)
     *
     * @generated from field: kessel.inventory.v1beta1.authz.ObjectReference parent = 1;
     */
    parent?: ObjectReference;

    /**
     * @generated from field: string relation = 2;
     */
    relation: string;

    /**
     * Consistency consistency = 4;
     *
     * @generated from field: kessel.inventory.v1beta1.authz.SubjectReference subject = 3;
     */
    subject?: SubjectReference;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.CheckRequest.
 * Use `create(CheckRequestSchema)` to create a new message.
 */
export const CheckRequestSchema: GenMessage<CheckRequest> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_check, 0);

/**
 * @generated from message kessel.inventory.v1beta1.authz.CheckResponse
 */
export type CheckResponse =
  Message<"kessel.inventory.v1beta1.authz.CheckResponse"> & {
    /**
     * @generated from field: kessel.inventory.v1beta1.authz.CheckResponse.Allowed allowed = 1;
     */
    allowed: CheckResponse_Allowed;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.CheckResponse.
 * Use `create(CheckResponseSchema)` to create a new message.
 */
export const CheckResponseSchema: GenMessage<CheckResponse> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_check, 1);

/**
 * @generated from enum kessel.inventory.v1beta1.authz.CheckResponse.Allowed
 */
export enum CheckResponse_Allowed {
  /**
   * @generated from enum value: ALLOWED_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ALLOWED_TRUE = 1;
   */
  TRUE = 1,

  /**
   * e.g.  ALLOWED_CONDITIONAL = 3;
   *
   * @generated from enum value: ALLOWED_FALSE = 2;
   */
  FALSE = 2,
}

/**
 * Describes the enum kessel.inventory.v1beta1.authz.CheckResponse.Allowed.
 */
export const CheckResponse_AllowedSchema: GenEnum<CheckResponse_Allowed> =
  /*@__PURE__*/
  enumDesc(file_kessel_inventory_v1beta1_authz_check, 1, 0);

/**
 * fully consistent
 *
 * @generated from message kessel.inventory.v1beta1.authz.CheckForUpdateRequest
 */
export type CheckForUpdateRequest =
  Message<"kessel.inventory.v1beta1.authz.CheckForUpdateRequest"> & {
    /**
     * Required parameters (from an authz perspective)
     * - resource type and id
     * - permission (cannot be derived from type as types may have multiple edit permissions Ex: https://github.com/RedHatInsights/rbac-config/blob/master/configs/prod/schemas/src/notifications.ksl#L37)
     * - user (possibly derived from an identity token)
     *
     * @generated from field: kessel.inventory.v1beta1.authz.ObjectReference parent = 1;
     */
    parent?: ObjectReference;

    /**
     * @generated from field: string relation = 2;
     */
    relation: string;

    /**
     * @generated from field: kessel.inventory.v1beta1.authz.SubjectReference subject = 3;
     */
    subject?: SubjectReference;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.CheckForUpdateRequest.
 * Use `create(CheckForUpdateRequestSchema)` to create a new message.
 */
export const CheckForUpdateRequestSchema: GenMessage<CheckForUpdateRequest> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_check, 2);

/**
 * @generated from message kessel.inventory.v1beta1.authz.CheckForUpdateResponse
 */
export type CheckForUpdateResponse =
  Message<"kessel.inventory.v1beta1.authz.CheckForUpdateResponse"> & {
    /**
     * @generated from field: kessel.inventory.v1beta1.authz.CheckForUpdateResponse.Allowed allowed = 1;
     */
    allowed: CheckForUpdateResponse_Allowed;
  };

/**
 * Describes the message kessel.inventory.v1beta1.authz.CheckForUpdateResponse.
 * Use `create(CheckForUpdateResponseSchema)` to create a new message.
 */
export const CheckForUpdateResponseSchema: GenMessage<CheckForUpdateResponse> =
  /*@__PURE__*/
  messageDesc(file_kessel_inventory_v1beta1_authz_check, 3);

/**
 * @generated from enum kessel.inventory.v1beta1.authz.CheckForUpdateResponse.Allowed
 */
export enum CheckForUpdateResponse_Allowed {
  /**
   * @generated from enum value: ALLOWED_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: ALLOWED_TRUE = 1;
   */
  TRUE = 1,

  /**
   * e.g.  ALLOWED_CONDITIONAL = 3;
   *
   * @generated from enum value: ALLOWED_FALSE = 2;
   */
  FALSE = 2,
}

/**
 * Describes the enum kessel.inventory.v1beta1.authz.CheckForUpdateResponse.Allowed.
 */
export const CheckForUpdateResponse_AllowedSchema: GenEnum<CheckForUpdateResponse_Allowed> =
  /*@__PURE__*/
  enumDesc(file_kessel_inventory_v1beta1_authz_check, 3, 0);

/**
 * @generated from service kessel.inventory.v1beta1.authz.KesselCheckService
 */
export const KesselCheckService: GenService<{
  /**
   * Checks for the existence of a single Relationship
   * (a Relation between a Resource and a Subject or Subject Set).
   *
   * @generated from rpc kessel.inventory.v1beta1.authz.KesselCheckService.Check
   */
  check: {
    methodKind: "unary";
    input: typeof CheckRequestSchema;
    output: typeof CheckResponseSchema;
  };
  /**
   * @generated from rpc kessel.inventory.v1beta1.authz.KesselCheckService.CheckForUpdate
   */
  checkForUpdate: {
    methodKind: "unary";
    input: typeof CheckForUpdateRequestSchema;
    output: typeof CheckForUpdateResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_kessel_inventory_v1beta1_authz_check, 0);
